--Configuration
getgenv().Use_Displayname = true -- if true, put accounts displayname for bots | if false use the username of accounts
getgenv().bots = {"Red", "Purple", "Blue"} --bots
getgenv().owner = "JokerMadBoss" --Owner (USER NAME, DO NOT PUT DISPLAYNAME)
getgenv().nbbot = 3 -- Number of bots you want to use
getgenv().prefix = ";" -- Prefix
getgenv().botrender = true -- when true, bots use less CPU
getgenv().printcmd = true -- if true, displays all commands available in the console

--get configs
local Use_Displayname = getgenv().Use_Displayname
local bots = getgenv().bots
local owner = getgenv().owner
local nbbot = getgenv().nbbot
local prefix = getgenv().prefix
local botrender = getgenv().botrender
local printcmd = getgenv().printcmd
local versionfromconfig = getgenv().version

-- cmd, bool and stuff
local cmdstatus = true
local cmdindex = true
local cmdfollow = true
local cmdquit = true
local cmddance = true
local cmdundance = true
local cmdreset = true
local cmdjump = true
local cmdsay = true
local cmdunfollow = true
local cmdreset = true
local cmdorbit = true
local cmdunorbit = true
local cmdgoto = true
local cmdleft = true
local cmdright = true
local cmdws = true
local cmdloopjump = true
local cmdunloopjump = true
local cmdcircle = true
local cmdchannel = true
local cmdworm = true
local cmdunworm = true
local cmdspin = true
local cmdunspin = true
local cmdadmin = true
local cmdarch = true
local cmdorbit2 = true
local cmdorbit3 = true
local cmdorbit4 = true
local cmdorbit5 = true
local cmdorbit6 = true
local cmdstalk = true
local cmdunstalk = true
local cmdhelp = true
local cmdtower = true
local cmduntower = true
local cmdfix = true
local cmdfireworks = true
local cmdfling = true
local cmdunfling = true
local cmdexplode = true
local cmdelevator = true
local cmdunelevator = true
local cmdgojo = true
local cmdbridge = true

local towerbool = nil
local followbool = nil
local orbitbool = nil
local orbitbool2 = nil
local orbitbool3 = nil
local orbitbool4 = nil
local orbitbool5 = nil
local orbitbool6 = nil
local leftoffset = nil
local rightoffset = nil
local booljump = nil
local indexcircle = nil
local distance = nil
local channel = nil
local wormbool = nil
local boolspin = nil
local adminbool = nil
local stalkbool = nil
local flingbool = nil
local elevatorbool = nil
local gojobool = nil
local bridgebool = nil
local bridgeConnection = nil
local Admins = {}

--version of the script
print("Death's bot controller VERSION: 0.2.3")


--print cmds in console
if printcmd then
print("Death's Bot Controller")
print("-------------------------------------------------------------------")
print("args:")
print("[plr] = player (you don't need to put the full username or display name of someone to make it work)")
print("<number> = need to be a number to make it work")
print("(string) = word or a sentence")
print("-------------------------------------------------------------------")
print(";status                              |  Check if bots are active")
print(";index                               |  Show bots' index")
print(";follow [plr]                        |  Follow someone")
print(";quit                                |  Disconnect admins and owner from the script")
print(";dance <number>                      |  Make bots dance")
print(";undance                             |  Make bots stop dancing")
print(";reset                               |  Make bots reset")
print(";jump                                |  Make bots jump")
print(";say (sentence)                      |  Make bots say something")
print(";unfollow                            |  Unfollow the player that the bots are following")
print(";orbit [plr] <radius> <speed>        |  Orbit around someone V1 (normal orbit)")
print(";orbit2 [plr] <radius> <speed>       |  Orbit around someone V2 (cooler)")
print(";orbit3 [plr] <radius> <speed>       |  Orbit around someone V3")
print(";orbit4 [plr] <radius> <speed>       |  Orbit around someone V4")
print(";orbit5 [plr] <radius> <speed>       |  Orbit around someone V5")
print(";orbit6 [plr] <radius> <speed>       |  Orbit around someone V6 (chaotic)")
print(";unorbit                             |  Stop bots from orbiting")
print(";goto [plr]                          |  Teleport bots to a player")
print(";left [plr]                          |  Make a line with the bots going left")
print(";right [plr]                         |  Make a line with the bots going right")
print(";ws <number>                         |  Change bots' walk speed")
print(";loopjump                            |  Make bots jump in a loop")
print(";unloopjump                          |  Stop the jump loop")
print(";circle <number>                     |  Make bots form a circle around you")
print(";channel <number>                    |  Change the bot that says the messages")
print(";worm [plr]                          |  Make a worm/train/snake formation with bots")
print(";unworm                              |  Stop the worm/train/snake formation")
print(";spin <number>                       |  Make bots spin")
print(";unspin                              |  Make bots stop spinning")
print(";admin [plr]                         |  Give admin to someone, users with admin permission can control the bots")
print(";arch <number>                       |  Make a half-circle with the bots")
print(";stalk [plr]                         |  Follow someone and walk around them")
print(";unstalk                             |  Stop following someone and walking around them")
print(";help                                |  Chat all available commands")
print(";tower [plr]                         |  Makes a tower of bots")
print(";untower                             |  Undo the tower")
print(";fix                                 |  Try to fix the bot if glitched")
print(";fireworks [plr]                     |  Launch bots in the air and make them explode")
print(";explode [plr]                       |  Teleports bots at the player and make them explode")
print(";fling [plr]                         |  Teleports bots at the player and fling them")
print(";unfling                             |  Stop bots from flinging")
print(";elevator [plr]                      |  Make bots form a platform which rises upward")
print(";unelevator                          |  Stop the elevator")
print(";gojo [plr]                          |  Make bots do the hollow purple sequence")
print(";bridge [plr]                        |  Make bots form a bridge infront of playe")
print(";unbridge                            |  Stop the bridge")
end

-- Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local TextChatService = game:GetService("TextChatService")
local VirtualUser = game:GetService("VirtualUser")

local player = game.Players.LocalPlayer
local displayName = player.DisplayName
local user = player.Name
local offset = math.random(0, 360)

local ownerPlayer = game.Players:FindFirstChild(owner)
local adminNotConnected = {}

-- index bot
local index

if Use_Displayname then
  for i, bot in ipairs(bots) do
    if displayName == bot then
      index = i
      break
    end
  end
else
  for i, bot in ipairs(bots) do
    if user == bot then
      index = i
      break
    end
  end
end

-- don't mess with it
if index then
    indexcircle = (360 / nbbot * index)
end

--disable/enable render (less cpu usage)
if index and botrender then
  RunService:Set3dRenderingEnabled(false)
else
  RunService:Set3dRenderingEnabled(true)
end

-- Isindex
if not index then
  if player.Name == owner then
  else
    warn("No bot or owner corresponding with: " .. table.concat(bots, ", ") .. " or " .. owner .. " for this instance.")
    return
  end
end

-- Chat message
local function chatMessage(str)
  str = tostring(str)
  if TextChatService.ChatVersion == Enum.ChatVersion.TextChatService then
    TextChatService.TextChannels.RBXGeneral:SendAsync(str)
  else
    game.ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(str, "All")
  end
end

-- make life easy, with this you don't have to type someone's whole name
local function findPlayerByName(partialName)
  if partialName:lower() == "me" then
    return game.Players:FindFirstChild(owner)
  end

  if partialName:lower() == "random" then
    local players = game.Players:GetPlayers()
    if #players > 0 then
      return players[math.random(1, #players)]
    end
  end

  local bestMatch = nil
  local bestMatchScore = 0

  for _, plr in pairs(game.Players:GetPlayers()) do
    local nameMatch = plr.Name:lower():find(partialName:lower())
    local displayNameMatch = plr.DisplayName:lower():find(partialName:lower())

    if nameMatch or displayNameMatch then
      local score = (nameMatch and #plr.Name or 0) + (displayNameMatch and #plr.DisplayName or 0)
      if score > bestMatchScore then
        bestMatchScore = score
        bestMatch = plr
      end
    end
  end

  return bestMatch
end

--no more bots flinging away with this
local function removeVelocity()
  for _, v in pairs(player.Character:GetDescendants()) do
      if v:IsA("BasePart") then
          v.Velocity = Vector3.new(0, 0, 0)
          v.RotVelocity = Vector3.new(0, 0, 0)
      elseif v:IsA("BodyVelocity") then
          v.Velocity = Vector3.new(0, 0, 0)
      elseif v:IsA("BodyAngularVelocity") then
          v.AngularVelocity = Vector3.new(0, 0, 0)
      elseif v:IsA("BodyPosition") then
          v.Position = v.Position
      elseif v:IsA("BodyGyro") then
          v.CFrame = v.CFrame
      end
  end
end

-- this function make the script a bit more smarter
local function disablebool()
towerbool = false
followbool = false
orbitbool = false
orbitbool2 = false
orbitbool3 = false
orbitbool4 = false
orbitbool5 = false
orbitbool6 = false
booljump = false
wormbool = false
boolspin = false
stalkbool = false
flingbool = false
elevatorbool = false
gojobool = false
bridgebool = false
end

-- ;fix
local function fix()
removeVelocity()
towerbool = false
followbool = false
orbitbool = false
orbitbool2 = false
orbitbool3 = false
orbitbool4 = false
orbitbool5 = false
orbitbool6 = false
booljump = false
wormbool = false
boolspin = false
stalkbool = false
flingbool = false
elevatorbool = false
gojobool = false
bridgebool = false
game.Workspace.Gravity = 196.2
player.Character:BreakJoints()
end

-- ;circle
local function tpcircle(distance)
  if distance == 0 then
    distance = 0.0001 -- yes because you can't divide by 0
  end

  local targetPlayer = Players:FindFirstChild(owner)
  if not targetPlayer or not targetPlayer.Character then
    return
  end

  local targetHumanoidRootPart = targetPlayer.Character:FindFirstChild("HumanoidRootPart")
  if not targetHumanoidRootPart then
    return
  end

  local player = Players.LocalPlayer
  local playerCharacter = player.Character
  local playerHumanoidRootPart = playerCharacter:FindFirstChild("HumanoidRootPart")
  if not playerHumanoidRootPart then
    return
  end

  removeVelocity()
  local angle = math.rad(0 + indexcircle)
  local offsetX = distance * math.cos(angle)
  local offsetZ = distance * math.sin(angle)
  local newPosition = targetHumanoidRootPart.Position + Vector3.new(offsetX, 0, offsetZ)
  local newCFrame = CFrame.new(newPosition, targetHumanoidRootPart.Position)
  playerHumanoidRootPart.CFrame = newCFrame
end

-- ;arch
local function tparch(distance)
  if distance == 0 then
    distance = 0.0001
  end

  local targetPlayer = Players:FindFirstChild(owner)
  if not targetPlayer or not targetPlayer.Character then
    return
  end

  local targetHumanoidRootPart = targetPlayer.Character:FindFirstChild("HumanoidRootPart")
  if not targetHumanoidRootPart then
    return
  end
  
  local player = Players.LocalPlayer
  local playerCharacter = player.Character
  local playerHumanoidRootPart = playerCharacter:FindFirstChild("HumanoidRootPart")
  if not playerHumanoidRootPart then
    return
  end
  
  removeVelocity()
  local angle = math.rad(0 + (indexcircle)/2)
  local offsetX = distance * math.cos(angle)
  local offsetZ = distance * math.sin(angle)
  local newPosition = targetHumanoidRootPart.Position + Vector3.new(offsetX, 0, offsetZ)
  local newCFrame = CFrame.new(newPosition, targetHumanoidRootPart.Position)
  playerHumanoidRootPart.CFrame = newCFrame
end

-- ;left
local function left(targetPlayer)
  if not targetPlayer or not targetPlayer.Character then
    return
  end

  local targetHumanoidRootPart = targetPlayer.Character:FindFirstChild("HumanoidRootPart")
  if not targetHumanoidRootPart then
    return
  end

  if player and player.Character then
    local localHumanoidRootPart = player.Character:FindFirstChild("HumanoidRootPart")
    if localHumanoidRootPart then

      removeVelocity()
      local offset = targetHumanoidRootPart.CFrame.RightVector * -5 * index  -- NEGATIVE IS LEFT, change this if you want it to go right
      localHumanoidRootPart.CFrame = targetHumanoidRootPart.CFrame + offset
    end
  end
end

-- ;right
local function right(targetPlayer)
  if not targetPlayer or not targetPlayer.Character then
    return
  end

  local targetHumanoidRootPart = targetPlayer.Character:FindFirstChild("HumanoidRootPart")
  if not targetHumanoidRootPart then
    return
  end

  if player and player.Character then
    local localHumanoidRootPart = player.Character:FindFirstChild("HumanoidRootPart")
    if localHumanoidRootPart then
      removeVelocity()
      local offset = targetHumanoidRootPart.CFrame.RightVector * 5 * index  -- POSITIVE IS RIGHT, change this if you want it to go left
      localHumanoidRootPart.CFrame = targetHumanoidRootPart.CFrame + offset
    end
  end
end

-- ;goto
local function goto(targetPlayer)
  if not targetPlayer or not targetPlayer.Character then
    return
  end

  local targetHumanoidRootPart = targetPlayer.Character:FindFirstChild("HumanoidRootPart")
  if not targetHumanoidRootPart then
    return
  end

  if player and player.Character then
    local localHumanoidRootPart = player.Character:FindFirstChild("HumanoidRootPart")
    if localHumanoidRootPart then
      removeVelocity()
      localHumanoidRootPart.CFrame = targetHumanoidRootPart.CFrame + Vector3.new(0, 0, 0)
    end
  end
end

-- ;fireworks
local function fireworks(targetPlayer)
  if player and player.Character then
    local humanoid = player.Character:FindFirstChild("Humanoid")
    local humanoidRootPart = player.Character:FindFirstChild("HumanoidRootPart")
    
    if humanoid and humanoidRootPart then
      -- Apply firework effects
      local Spin = Instance.new("BodyAngularVelocity")
      Spin.Name = "Spinning"
      Spin.Parent = humanoidRootPart
      Spin.MaxTorque = Vector3.new(0, math.huge, 0)
      Spin.AngularVelocity = Vector3.new(0, 45, 0)
      
      local Velocity = Instance.new("BodyVelocity")
      Velocity.Name = "Upward"
      Velocity.Parent = humanoidRootPart
      Velocity.MaxForce = Vector3.new(0, math.huge, 0)
      Velocity.Velocity = Vector3.new(0, 25, 0)
      
      -- Set timer to kill character
      task.delay(2, function()
        if humanoid then
          if Spin then
            Spin:Destroy()
          end
          if Velocity then
            Velocity:Destroy()
          end
          humanoid.Health = 0
        end
      end)
      
      -- Only teleport if target player is specified
      if targetPlayer then
        if targetPlayer.Character then
          local targetHumanoidRootPart = targetPlayer.Character:FindFirstChild("HumanoidRootPart")
          if targetHumanoidRootPart then
            humanoidRootPart.CFrame = targetHumanoidRootPart.CFrame + Vector3.new(0, 0, 0)
          end
        end
      end
    end
  end
end

-- ;explode
local function explode(targetPlayer)
  if player and player.Character then
    local humanoid = player.Character:FindFirstChild("Humanoid")
    local humanoidRootPart = player.Character:FindFirstChild("HumanoidRootPart")
    
    if humanoid and humanoidRootPart then
      -- Apply firework effects
      local Spin = Instance.new("BodyAngularVelocity")
      Spin.Name = "Spinning"
      Spin.Parent = humanoidRootPart
      Spin.MaxTorque = Vector3.new(0, math.huge, 0)
      Spin.AngularVelocity = Vector3.new(0, 105, 0)
      
      local Velocity = Instance.new("BodyVelocity")
      Velocity.Name = "Upward"
      Velocity.Parent = humanoidRootPart
      Velocity.MaxForce = Vector3.new(0, math.huge, 0)
      Velocity.Velocity = Vector3.new(0, 0, 0)
      
      -- Set timer to kill character
      task.delay(1, function()
        if humanoid then
          if Spin then
            Spin:Destroy()
          end
          if Velocity then
            Velocity:Destroy()
          end
          humanoid.Health = 0
        end
      end)
      
      -- Only teleport if target player is specified
      if targetPlayer then
        if targetPlayer.Character then
          local targetHumanoidRootPart = targetPlayer.Character:FindFirstChild("HumanoidRootPart")
          if targetHumanoidRootPart then
            humanoidRootPart.CFrame = targetHumanoidRootPart.CFrame + Vector3.new(0, 3, 0) -- Offset 3 studs up to be above head
          end
        end
      end
    end
  end
end

-- ;fling
local function fling(targetPlayer)
  if player and player.Character then
    local humanoid = player.Character:FindFirstChild("Humanoid")
    local humanoidRootPart = player.Character:FindFirstChild("HumanoidRootPart")
    
    if humanoid and humanoidRootPart then
      -- Apply fling effects
      local Spin = Instance.new("BodyAngularVelocity")
      Spin.Name = "Spinning"
      Spin.Parent = humanoidRootPart
      Spin.MaxTorque = Vector3.new(0, math.huge, 0)
      Spin.AngularVelocity = Vector3.new(0, 1000, 0)
      
      local Velocity = Instance.new("BodyVelocity")
      Velocity.Name = "Upward"
      Velocity.Parent = humanoidRootPart
      Velocity.MaxForce = Vector3.new(0, math.huge, 0)
      Velocity.Velocity = Vector3.new(0, 0, 0)

      flingbool = true

      if targetPlayer then
        -- Loop teleport to target player
        local teleportLoop = game:GetService("RunService").Heartbeat:Connect(function()
          if not flingbool then
            teleportLoop:Disconnect()
            if Spin then
              Spin:Destroy()
            end
            if Velocity then
              Velocity:Destroy()
            end
            return
          end
          
          if targetPlayer.Character then
            local targetHumanoidRootPart = targetPlayer.Character:FindFirstChild("HumanoidRootPart")
            if targetHumanoidRootPart then
              humanoidRootPart.CFrame = targetHumanoidRootPart.CFrame + Vector3.new(0, 0, 0)
            end
          end
        end)
        
        -- Clean up loop when target dies
        task.spawn(function()
          while targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("Humanoid") and targetPlayer.Character.Humanoid.Health > 0 do
            task.wait()
          end
          teleportLoop:Disconnect()
          
          if humanoid then
            if Spin then
              Spin:Destroy()  
            end
            if Velocity then
              Velocity:Destroy()
            end
          end
        end)
      end
    end
  end
end

-- ;unfling
local function unfling()
  flingbool = false
  if player and player.Character then
    local humanoidRootPart = player.Character:FindFirstChild("HumanoidRootPart")
    if humanoidRootPart then
      local spin = humanoidRootPart:FindFirstChild("Spinning")
      local velocity = humanoidRootPart:FindFirstChild("Upward")
      
      if spin then
        spin:Destroy()
      end
      if velocity then
        velocity:Destroy()
      end
    end
  end
end

-- ;gojo
local function gojo(targetPlayer)
  if not targetPlayer or not targetPlayer.Character then
      return
  end

  local targetHumanoidRootPart = targetPlayer.Character:FindFirstChild("HumanoidRootPart")
  if not targetHumanoidRootPart then
      return
  end

  -- Bot positioning logic
  local displayName = player.DisplayName
  local botIndex = table.find(bots, displayName)
  
  if not botIndex then 
      return 
  end

  -- Precise offset calculations with synchronized movement
  local offset
  local movementProgress = 0  -- Shared movement progress for bot1 and bot3
  local synchronizedMovement = 0  -- Ensures both bots move at exactly the same rate

  if botIndex == 1 then  -- bot1: starts left, moves to middle
      offset = Vector3.new(-10, 0, -3)
  elseif botIndex == 2 then  -- bot2: starts underneath, rises to front of player
      offset = Vector3.new(0, -10, 3)
  elseif botIndex == 3 then  -- bot3: starts right, moves to middle
      offset = Vector3.new(10, 0, -3)
  end

  -- Flags to track bot states
  local middleReached = false
  local bot2ReachedTop = false
  local forwardDistance = 3
  local maxForwardDistance = 50

  -- Continuous positioning mechanism
  local gojoConnection
  gojoConnection = RunService.Heartbeat:Connect(function()
      if not player or not player.Character then
          gojoConnection:Disconnect()
          return
      end

      local localHumanoidRootPart = player.Character:FindFirstChild("HumanoidRootPart")
      local localHumanoid = player.Character:FindFirstChild("Humanoid")

      if localHumanoidRootPart and targetHumanoidRootPart and localHumanoid then
          local targetCFrame = targetHumanoidRootPart.CFrame
          local finalOffset = offset

          -- Synchronized movement for bot1 and bot3
          if botIndex == 1 or botIndex == 3 then
              -- Increment shared movement progress
              synchronizedMovement = math.min(synchronizedMovement + 0.02, 1)
              
              -- Calculate interpolated offset for both bot1 and bot3
              finalOffset = Vector3.new(
                  offset.X * (1 - synchronizedMovement),
                  offset.Y,
                  offset.Z
              )

              -- When bots reach middle, teleport to front
              if synchronizedMovement >= 1 then
                  middleReached = true
                  finalOffset = Vector3.new(0, 0, 3)
                  disablebool()
                  player.Character:BreakJoints()
              end
          elseif botIndex == 2 then
              -- Existing bot2 movement logic
              if not bot2ReachedTop then
                  finalOffset = Vector3.new(
                      offset.X,
                      offset.Y + (10 * movementProgress),
                      offset.Z
                  )
                  movementProgress = math.min(movementProgress + 0.01, 1)

                  if movementProgress >= 1 then
                      bot2ReachedTop = true
                      movementProgress = 0
                  end
              else
                  forwardDistance = math.min(forwardDistance + 1.5, maxForwardDistance)
                  finalOffset = Vector3.new(0, 0, forwardDistance)

                  if forwardDistance >= maxForwardDistance then
                      gojoConnection:Disconnect()
                      player.Character:BreakJoints()
                  end
              end
          end

          -- Calculate rotated offset
          local rotatedOffset = targetCFrame.RightVector * finalOffset.X + 
                                 targetCFrame.UpVector * finalOffset.Y + 
                                 targetCFrame.LookVector * finalOffset.Z
          
          -- Calculate the exact desired position
          local desiredPosition = targetCFrame.Position + rotatedOffset
          
          -- Set the bot's position precisely
          localHumanoidRootPart.CFrame = CFrame.new(desiredPosition) * 
                                         targetCFrame.Rotation
          
          -- Remove velocity to prevent drifting
          removeVelocity()

          -- Disconnect if middle is reached for bot1 and bot3
          if middleReached and (botIndex == 1 or botIndex == 3) then
              gojoConnection:Disconnect()
          end
      else
          gojoConnection:Disconnect()
      end
  end)

  return gojoConnection
end

-- ;elevator
local function elevator(targetPlayer)
  -- Get the bot's index to determine position
  local displayName = player.DisplayName
  local botIndex = table.find(bots, displayName)
  if not botIndex then return end

  -- Calculate initial position
  local totalBots = #bots
  local middleOffset = math.floor(totalBots / 2)
  local horizontalOffset = (botIndex - middleOffset - 1) * 3

  -- Reset any existing elevator command
  if elevatorbool then
    elevatorbool = false
  end
  elevatorbool = true
  
  -- Get initial target position
  local initialPosition
  if targetPlayer and targetPlayer.Character then
    local targetHumanoidRootPart = targetPlayer.Character:FindFirstChild("HumanoidRootPart")
    if targetHumanoidRootPart then
      initialPosition = targetHumanoidRootPart.Position
    end
  end

  if not initialPosition then return end
  
  -- Start rising motion
  local startTime = tick()
  local riseConnection
  riseConnection = RunService.Heartbeat:Connect(function()
    if not elevatorbool or commandInProgress ~= "elevator" then
      riseConnection:Disconnect()
      return
    end

    if not player or not player.Character then
      riseConnection:Disconnect()
      return
    end

    local humanoid = player.Character:FindFirstChild("Humanoid")
    if not humanoid or humanoid.Health <= 0 then
      riseConnection:Disconnect()
      return
    end

    local localHumanoidRootPart = player.Character:FindFirstChild("HumanoidRootPart")
    if localHumanoidRootPart then
      -- Calculate rising height based on time since start
      local timePassed = tick() - startTime
      local height = math.max(-3 + timePassed * 2, -3) -- Start at -3 and rise up
      
      -- Position with horizontal offset and rising height
      local offset = Vector3.new(horizontalOffset, height, 0)
      local rotation = CFrame.Angles(math.rad(90), 0, 0)
      localHumanoidRootPart.CFrame = CFrame.new(initialPosition + offset) * rotation
      
      removeVelocity()
    end
  end)
  
  commandInProgress = "elevator"
end

-- ;unelevator
local function unelevator()
  elevatorbool = false
end

--- ;bridge
local function bridge(targetPlayer)
  -- Stop any existing bridge connection
  if bridgeConnection then
      bridgeConnection:Disconnect()
      bridgeConnection = nil
  end

  if not targetPlayer or not targetPlayer.Character then
      return nil
  end

  local targetHumanoidRootPart = targetPlayer.Character:FindFirstChild("HumanoidRootPart")
  if not targetHumanoidRootPart then
      return nil
  end

  -- Set bridge boolean to true
  bridgebool = true
  
  -- Get the bot's index to determine position
  local displayName = player.DisplayName
  local botIndex = table.find(bots, displayName)

  if not botIndex then 
      return nil
  end

  -- Dynamic forward distance calculation
  local baseForwardDistance = 2.5 -- Starting distance
  local forwardDistance = baseForwardDistance * (botIndex * 2)  -- Increases by 3 for each bot

  -- Continuous positioning mechanism
  bridgeConnection = RunService.Heartbeat:Connect(function()
      -- Check if bridge should continue
      if not bridgebool or not player or not player.Character then
          if bridgeConnection then
              bridgeConnection:Disconnect()
              bridgeConnection = nil
          end
          return
      end

      local localHumanoidRootPart = player.Character:FindFirstChild("HumanoidRootPart")
      local localHumanoid = player.Character:FindFirstChild("Humanoid")

      if localHumanoidRootPart and targetHumanoidRootPart and localHumanoid then
          -- Get target's current position and rotation
          local targetCFrame = targetHumanoidRootPart.CFrame

          -- Calculate forward vector
          local forwardVector = targetCFrame.LookVector * forwardDistance

          -- Compute final position
          local desiredPosition = targetCFrame.Position + forwardVector

          -- Rotate 90 degrees to make the bot's face point towards the sky
          local rotatedCFrame = CFrame.lookAt(desiredPosition, targetCFrame.Position) * CFrame.Angles(math.rad(90), 0, 0)

          -- Set bot's CFrame to always face the target player but rotated upward
          localHumanoidRootPart.CFrame = rotatedCFrame

          -- Remove velocity to prevent drifting
          removeVelocity()
      else
          -- Disconnect if target or bot is missing
          if bridgeConnection then
              bridgeConnection:Disconnect()
              bridgeConnection = nil
          end
      end
  end)

  return bridgeConnection
end

-- ;unbridge
local function unbridge()
  -- Disconnect the bridge connection if it exists
  if bridgeConnection then
      bridgeConnection:Disconnect()
      bridgeConnection = nil
  end
end

-- ;tower
local function tower(targetPlayer)
  if not targetPlayer or not targetPlayer.Character then

      return
  end

  local targetHumanoidRootPart = targetPlayer.Character:FindFirstChild("HumanoidRootPart")
  if not targetHumanoidRootPart then
      return
  end

  towerbool = true

  local heartbeatConnection
  heartbeatConnection = RunService.Heartbeat:Connect(function()
      if not towerbool or not targetHumanoidRootPart or not targetPlayer.Character then
          heartbeatConnection:Disconnect()
          return
      end

      if player and player.Character then
          local localHumanoidRootPart = player.Character:FindFirstChild("HumanoidRootPart")
          if localHumanoidRootPart then
              local offset = targetHumanoidRootPart.CFrame.UpVector * 5 * index
              localHumanoidRootPart.CFrame = targetHumanoidRootPart.CFrame + offset

              removeVelocity()
          end
      end
  end)
end

-- ;follow
local function followPlayer(targetPlayer)
  if targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
    while followbool and targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") do
      local humanoidRootPart = targetPlayer.Character.HumanoidRootPart
      player.Character.Humanoid:MoveTo(humanoidRootPart.Position)
      wait(0.1)
    end
  else
    warn("Target player or their character is not valid.")
  end
end

-- ;spin from IY
local function spin(spinSpeed)
  local character = player.Character or player.CharacterAdded:Wait()

  local root = character:FindFirstChild("HumanoidRootPart")

  if root then
    local existingSpin = root:FindFirstChild("Spinning")
    if existingSpin then
      existingSpin:Destroy()
    end

    local Spin = Instance.new("BodyAngularVelocity")
    Spin.Name = "Spinning"
    Spin.Parent = root
    Spin.MaxTorque = Vector3.new(0, math.huge, 0)
    Spin.AngularVelocity = Vector3.new(0, spinSpeed, 0)

    while boolspin do
      wait(0.1)
    end

    Spin:Destroy()
  end
end

-- ;worm
local function worm(msgtarget2)
  local displayName = player.DisplayName
  local indexworm = table.find(bots, displayName)

  if not indexworm then
    return
  end

  if indexworm > 1 then
    local targetBotName = bots[indexworm - 1]
    local targetPlayer = findPlayerByName(targetBotName)
    if targetPlayer then
      wormbool = true

      while  wormbool and targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") do
        local humanoidRootPart = targetPlayer.Character.HumanoidRootPart
        player.Character.Humanoid:MoveTo(humanoidRootPart.Position)
        wait(0.1)
      end
    else
    end
  else

    if msgtarget2 and msgtarget2.Character and msgtarget2.Character:FindFirstChild("HumanoidRootPart") then
      followbool = true
      while followbool and msgtarget2 and msgtarget2.Character and msgtarget2.Character:FindFirstChild("HumanoidRootPart") do
        local humanoidRootPart = msgtarget2.Character.HumanoidRootPart
        player.Character.Humanoid:MoveTo(humanoidRootPart.Position)
        wait(0.1)
      end
    else
    end
  end
end

-- ;orbit from IY but modified
local function orbitPlayer(targetPlayer, speed, r)
  game.Workspace.Gravity = 0

  if r == 0 then
    r = 0.0001
  end

  local playerCharacter = player.Character
  local playerHumanoidRootPart = playerCharacter and playerCharacter:FindFirstChild("HumanoidRootPart")

  if not playerHumanoidRootPart then
    return
  end

  local targetHumanoidRootPart = targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart")
  if not targetHumanoidRootPart then
    return
  end

  local rotation = indexcircle
  local orbitConnection
  orbitConnection = RunService.Heartbeat:Connect(function()
  if not orbitbool or not targetPlayer or not targetPlayer.Character or not targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
    orbitConnection:Disconnect()
    return
  end

  removeVelocity()
  local newCFrame = CFrame.new(targetHumanoidRootPart.Position)
  * CFrame.Angles(0, math.rad(rotation), 0) -- if you are bored try to mess with values
  * CFrame.new(r, 0, 0)
  playerHumanoidRootPart.CFrame = newCFrame
  local lookAtCFrame = CFrame.new(playerHumanoidRootPart.Position, targetHumanoidRootPart.Position)
  playerHumanoidRootPart.CFrame = lookAtCFrame
  rotation = (rotation + speed) % 360
  end)
end

-- ;orbit2
local function orbitPlayer2(targetPlayer, speed, r)
  game.Workspace.Gravity = 0

  if r == 0 then
    r = 0.0001
  end

  local playerCharacter = player.Character
  local playerHumanoidRootPart = playerCharacter and playerCharacter:FindFirstChild("HumanoidRootPart")

  if not playerHumanoidRootPart then
    return
  end

  local targetHumanoidRootPart = targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart")
  if not targetHumanoidRootPart then
    return
  end

  local rotation = indexcircle
  local orbitConnection
  orbitConnection = RunService.Heartbeat:Connect(function()
  if not orbitbool2 or not targetPlayer or not targetPlayer.Character or not targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
    orbitConnection:Disconnect()
    return
  end

  removeVelocity()
  local newCFrame = CFrame.new(targetHumanoidRootPart.Position)
  * CFrame.Angles(math.rad(rotation), math.rad(rotation), 0)
  * CFrame.new(r, 0, 0)
  playerHumanoidRootPart.CFrame = newCFrame
  local lookAtCFrame = CFrame.new(playerHumanoidRootPart.Position, targetHumanoidRootPart.Position)
  playerHumanoidRootPart.CFrame = lookAtCFrame
  rotation = (rotation + speed) % 360
  end)
end

-- ;orbit3
local function orbitPlayer3(targetPlayer, speed, r)
  game.Workspace.Gravity = 0

  if r == 0 then
    r = 0.0001
  end

  local playerCharacter = player.Character
  local playerHumanoidRootPart = playerCharacter and playerCharacter:FindFirstChild("HumanoidRootPart")

  if not playerHumanoidRootPart then
    return
  end

  local targetHumanoidRootPart = targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart")
  if not targetHumanoidRootPart then
    return
  end

  removeVelocity()
  local rotation = indexcircle
  local orbitConnection
  orbitConnection = RunService.Heartbeat:Connect(function()
  if not orbitbool3 or not targetPlayer or not targetPlayer.Character or not targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
    orbitConnection:Disconnect()
    return
  end

  local newCFrame = CFrame.new(targetHumanoidRootPart.Position)
  * CFrame.Angles(math.rad(rotation), math.rad(rotation), math.rad(rotation))
  * CFrame.new(r, 0, 0)
  playerHumanoidRootPart.CFrame = newCFrame
  local lookAtCFrame = CFrame.new(playerHumanoidRootPart.Position, targetHumanoidRootPart.Position)
  playerHumanoidRootPart.CFrame = lookAtCFrame
  rotation = (rotation + speed) % 360
  end)
end

-- ;orbit4
local function orbitPlayer4(targetPlayer, speed, r)
  game.Workspace.Gravity = 0

  if r == 0 then
    r = 0.0001
  end

  local playerCharacter = player.Character
  local playerHumanoidRootPart = playerCharacter and playerCharacter:FindFirstChild("HumanoidRootPart")

  if not playerHumanoidRootPart then
    return
  end

  local targetHumanoidRootPart = targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart")
  if not targetHumanoidRootPart then
    return
  end

  removeVelocity()
  local rotation = indexcircle
  local orbitConnection
  orbitConnection = RunService.Heartbeat:Connect(function()
  if not orbitbool4 or not targetPlayer or not targetPlayer.Character or not targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
    orbitConnection:Disconnect()
    return
  end

  local newCFrame = CFrame.new(targetHumanoidRootPart.Position)
  * CFrame.Angles(math.rad(rotation),0, math.rad(rotation))
  * CFrame.new(r, 0, 0)
  playerHumanoidRootPart.CFrame = newCFrame
  local lookAtCFrame = CFrame.new(playerHumanoidRootPart.Position, targetHumanoidRootPart.Position)
  playerHumanoidRootPart.CFrame = lookAtCFrame
  rotation = (rotation + speed) % 360
  end)
end

-- ;orbit5
local function orbitPlayer5(targetPlayer, speed, r)
  game.Workspace.Gravity = 0

  if r == 0 then
    r = 0.0001
  end

  local playerCharacter = player.Character
  local playerHumanoidRootPart = playerCharacter and playerCharacter:FindFirstChild("HumanoidRootPart")

  if not playerHumanoidRootPart then
    return
  end

  local targetHumanoidRootPart = targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart")
  if not targetHumanoidRootPart then
    return
  end

  local rotation = indexcircle
  local orbitConnection
  orbitConnection = RunService.Heartbeat:Connect(function()
  if not orbitbool5 or not targetPlayer or not targetPlayer.Character or not targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
    orbitConnection:Disconnect()
    return
  end

  removeVelocity()
  local newCFrame = CFrame.new(targetHumanoidRootPart.Position)
  * CFrame.Angles(math.rad(math.random(0, 360)), math.rad(math.random(0, 360)), math.rad(math.random(0, 360)))
  * CFrame.new(r, 0, 0)
  playerHumanoidRootPart.CFrame = newCFrame
  local lookAtCFrame = CFrame.new(playerHumanoidRootPart.Position, targetHumanoidRootPart.Position)
  playerHumanoidRootPart.CFrame = lookAtCFrame
  rotation = (rotation + speed) % 360
  end)
end

-- ;orbit6
local function orbitPlayer6(targetPlayer, speed, r)
  game.Workspace.Gravity = 0

  if r == 0 then
    r = 0.0001
  end

  local playerCharacter = player.Character
  local playerHumanoidRootPart = playerCharacter and playerCharacter:FindFirstChild("HumanoidRootPart")

  if not playerHumanoidRootPart then
    return
  end

  local targetHumanoidRootPart = targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart")
  if not targetHumanoidRootPart then
    return
  end

  local rotation = indexcircle
  local orbitConnection
  orbitConnection = RunService.Heartbeat:Connect(function()
  if not orbitbool6 or not targetPlayer or not targetPlayer.Character or not targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
    orbitConnection:Disconnect()
    return
  end

  removeVelocity()
  local newCFrame = CFrame.new(targetHumanoidRootPart.Position)
  * CFrame.Angles(math.rad(math.random(0, 360)), math.rad(math.random(0, 360)), 0)
  * CFrame.new(r, 0, 0)
  playerHumanoidRootPart.CFrame = newCFrame
  local lookAtCFrame = CFrame.new(playerHumanoidRootPart.Position, targetHumanoidRootPart.Position)
  playerHumanoidRootPart.CFrame = lookAtCFrame
  rotation = (rotation + speed) % 360
  end)
end

-- ;stalk
local function stalkPlayer(targetPlayer)
  if targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
    while stalkbool and targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") do
      local humanoidRootPart = targetPlayer.Character.HumanoidRootPart
      local botHumanoidRootPart = player.Character:FindFirstChild("HumanoidRootPart")

      if botHumanoidRootPart then
        local distance = (botHumanoidRootPart.Position - humanoidRootPart.Position).Magnitude

        if distance > 25 then --make them tp if they are too far from the player, otherwise the cmd would be useless
          botHumanoidRootPart.CFrame = humanoidRootPart.CFrame + humanoidRootPart.CFrame.LookVector * -2.06546464
        else
          local randomOffset = Vector3.new(math.random(-8, 8),0,math.random(-8, 8))
          local moveToPosition = humanoidRootPart.Position + randomOffset
          player.Character.Humanoid:MoveTo(moveToPosition)
        end
      end
      wait(0.28) -- small delay otherwise it looks like they're having an seizure
    end
  else
    warn("Target player or their character is not valid.")
  end
end

-- ;admin
local function admin(targetPlayer)
  if not table.find(Admins, targetPlayer.Name) then
    table.insert(Admins, targetPlayer.Name)
    table.insert(adminNotConnected, targetPlayer.Name)
  else
  end
end

-- check chat for cmds
local function connectChatListener(playerpower)
  playerpower.Chatted:Connect(function(message)
  if playerpower.Name == owner or table.find(Admins, playerpower.Name) then
    if message:sub(1, #prefix) == prefix then
      local command = message:sub(#prefix + 1)
      if command == "status" and cmdstatus and table.find(bots, displayName) then
        chatMessage(displayName .. " (Bot " .. index .. ") is active!")
        wait(2)

      elseif command:sub(1, 6) == "admin " and table.find(bots, displayName) and cmdadmin then
        local adminargs = command:sub(7)
        local targetPlayerforadmin = findPlayerByName(adminargs)

        if targetPlayerforadmin then
          admin(targetPlayerforadmin)
          if index == channel then
            chatMessage(targetPlayerforadmin.Name .. ' is now an admin.')
          end
        else
          if index == channel then
            chatMessage("Player not found.")
          end
        end
        wait(2)

      elseif command == "quit" and table.find(bots, displayName) and cmdquit then
        cmdstatus = false
        cmdindex = false
        cmdfollow = false
        cmdquit = false
        cmddance = false
        cmdundance = false
        cmdreset = false
        cmdjump = false
        cmdsay = false
        cmdunfollow = false
        followbool = false
        cmdreset = false
        cmdorbit = false
        orbitbool = false
        cmdunorbit = false
        cmdgoto = false
        cmdalign = false
        cmdws = false
        booljump = false
        cmdloopjump = false
        cmdunloopjump = false
        cmdcircle = false
        cmdchannel = false
        orbitbool = false
        orbitbool5 = false
        orbitbool2 = false
        orbitbool3 = false
        orbitbool4 = false
        orbitbool6 = false
        wormbool = false
        cmdworm = false
        cmdunworm = false
        cmdspin = false
        cmdunspin = false
        boolspin = false
        cmdadmin = false
        adminbool = false
        cmdarch = false
        cmdorbit2 = false
        cmdorbit3 = false
        cmdorbit4 = false
        cmdorbit5 = false
        cmdorbit6 = false
        cmdstalk = false
        stalkbool = false
        cmdunstalk = false
        cmdhelp = false
        towerbool = false
        cmdtower = false
        cmduntower = false
        cmdfix = false
        cmdfling = false
        flingbool = false
        cmdexplode = false
        elevatorbool = false
        gojobool = false
        bridgebool = false
        cmdgojo = false
        cmdunbridge = false
        cmdfireworks = false
        Admins = {}
        adminNotConnected = {}
        chatMessage("Ended Script.")
        wait(2)


      elseif command == "index" and cmdindex and table.find(bots, displayName) then
        chatMessage(displayName .. " index is (" .. index .. ")")
        wait(2)

      elseif command:sub(1, 8) == "channel " and cmdchannel and table.find(bots, displayName) then
        local chnl = tonumber(command:sub(9))

        if chnl > nbbot or chnl < 1 then
          if index == channel then
            chatMessage("Error: channel must be between 1 and " .. nbbot)
          end
        else
          channel = chnl
          if index == channel then
            chatMessage("Channel is now: " .. channel)
          end
        end
        wait(2)

      elseif command:sub(1, 15) == "unloopjump" and cmdunloopjump and table.find(bots, displayName) then
        booljump = false
        wait(2)
      
      elseif command:sub(1, 8) == "untower" and cmduntower and table.find(bots, displayName) then
          towerbool = false
          wait(2)

      elseif command == "loopjump" and cmdloopjump and table.find(bots, displayName) then
        booljump = true
        while booljump do
          player.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
          wait(0.8)
        end
        wait(2)

      elseif command:sub(1, 5) == "left " and cmdleft and table.find(bots, displayName) then
        disablebool()
        local playerName = command:sub(6)
        local targetPlayer = findPlayerByName(playerName)
        if targetPlayer then
          left(targetPlayer)
          wait(2)
        end

      elseif command:sub(1, 6) == "right " and cmdright and table.find(bots, displayName) then
        local playerName = command:sub(7)
        local targetPlayer = findPlayerByName(playerName)
        if targetPlayer then
          right(targetPlayer)
          wait(2)
        end

      elseif command:sub(1, 7) == "dance" and table.find(bots, displayName) and cmddance then
        chatMessage("/e dance")
        wait(2)

      elseif command:sub(1, 7) == "dance 1" and table.find(bots, displayName) and cmddance then
        chatMessage("/e dance1")
        wait(2)

      elseif command:sub(1, 7) == "dance 2" and table.find(bots, displayName) and cmddance then
        chatMessage("/e dance2")
        wait(2)

      elseif command:sub(1, 7) == "dance 3" and table.find(bots, displayName) and cmddance then
        chatMessage("/e dance3")
        wait(2)

      elseif command:sub(1, 7) == "dance 4" and table.find(bots, displayName) and cmddance then
        chatMessage("/e dance 4")
        wait(2)

    elseif command:sub(1, 5) == "help" and table.find(bots, displayName) and cmdhelp then --max character per message is 155
    if index == channel then
        chatMessage("available commands:")
        chatMessage(";status ;index ;follow [plr] ;quit ;dance <number> ;undance ;reset ;jump ;say <sentence> ;unfollow ;orbit [plr] <radius> <speed>")
        chatMessage(";orbit2 [plr] <radius> <speed> ;orbit3 [plr] <radius> <speed> ;orbit4 [plr] <radius> <speed> ;orbit5 [plr] <radius> <speed>")
        chatMessage(";orbit6 [plr] <radius> <speed> ;unorbit ;goto [plr] ;align ;ws <number> ;loopjump ;unloopjump ;circle <number> ;channel <number>")
        chatMessage(";worm [plr] ;unworm ;spin <number> ;unspin ;admin [plr] ;arch <number> ;stalk [plr] ;unstalk ;help ;firework")
        end
    wait(2)

      elseif command:sub(1, 5) == "spin " and table.find(bots, displayName) and cmdspin then
        local spinarg = tonumber(command:sub(6))
        spin(spinarg)
        boolspin = true
        wait(2)

      elseif command:sub(1, 6) == "unspin" and table.find(bots, displayName) and cmdunspin then
        boolspin = false
        wait(2)

      elseif command:sub(1, 3) == "ws " and table.find(bots, displayName) and cmdws then
        local wsarg = tonumber(command:sub(4))
        if wsarg then
          player.Character.Humanoid.WalkSpeed = wsarg
          wait(2)
        else
        end

      elseif command:sub(1, 7) == "undance" and table.find(bots, displayName) and cmddance then
        player.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
        wait(2)

      elseif command:sub(1, 7) == "circle " and table.find(bots, displayName) and cmdcircle then
        disablebool()
        local circlearg = tonumber(command:sub(8)) or 8
        tpcircle(circlearg)
        wait(2)

      elseif command:sub(1, 5) == "arch " and table.find(bots, displayName) and cmdarch then
        disablebool()
        local archarg = tonumber(command:sub(6)) or 8
        tparch(archarg)
        wait(2)

      elseif command:sub(1, 4) == "say " and table.find(bots, displayName) and cmdsay then
        local msgcontent = command:sub(5)
        chatMessage(msgcontent)
        wait(2)

      elseif command:sub(1, 4) == "fix" and table.find(bots, displayName) and cmdfix then
        fix()
        chatmessage("Bot number "..index.."is fixed")
        wait(2)

      elseif command:sub(1, 4) == "jump" and table.find(bots, displayName) and cmdjump then
        player.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
        wait(2)

      elseif command:sub(1, 6) == "bridge" and table.find(bots, displayName) and cmdbridge then
        disablebool()
        local targetName = command:sub(8)
        local targetPlayer = findPlayerByName(targetName)
        
        if targetPlayer then
            bridge(targetPlayer)
            if index == channel then
                chatMessage("Bridging to " .. targetPlayer.Name)
            end
        else
            if index == channel then
                chatMessage("Player not found for bridging.")
            end
        end
        wait(2)

      elseif command:sub(1, 7) == "unbridge" and table.find(bots, displayName) and cmdunbridge then
        unbridge()
        if index == channel then
          chatMessage("Unbridged")
        end
        wait(2)

      elseif command:sub(1, 5) == "gojo " and table.find(bots, displayName) and cmdgojo then
        disablebool()
        local playerName = command:sub(6)
        local targetPlayer = findPlayerByName(playerName)
        if targetPlayer then
            if index == channel then
                chatMessage("Bots are now in Gojo formation around " .. targetPlayer.Name)
            end
            gojo(targetPlayer)
            wait(2)
        else
            chatMessage("Player not found: " .. playerName)
        end

      elseif command:sub(1, 9) == "elevator " and table.find(bots, displayName) and cmdelevator then
        disablebool()
        local playerName = command:sub(10)
        local targetPlayer = findPlayerByName(playerName)
        if targetPlayer then
          elevatorbool = true
          elevator(targetPlayer)
        else
          elevator()
        end
        wait(2)

      elseif command:sub(1, 10) == "unelevator" and table.find(bots, displayName) and cmdunelevator then
        unelevator()
        if index == channel then
          chatMessage("Stopped elevator")
        end
        wait(2)

      elseif command:sub(1, 8) == "firework" and table.find(bots, displayName) and cmdfireworks then
        disablebool()
        local playerName = command:sub(10)
        local targetPlayer = findPlayerByName(playerName)
        if command:sub(9,9) == " " and targetPlayer then
          fireworks(targetPlayer)
        else
          fireworks()
        end
        wait(2)

      elseif command:sub(1, 7) == "explode" and table.find(bots, displayName) and cmdexplode then
        disablebool()
        local playerName = command:sub(9)
        local targetPlayer = findPlayerByName(playerName)
        if command:sub(8,8) == " " and targetPlayer then
          explode(targetPlayer)
        else
          explode()
        end
        wait(2)

      elseif command:sub(1, 5) == "fling" and table.find(bots, displayName) and cmdfling then
        disablebool()
        if command:sub(6,6) == " " then
          local playerName = command:sub(7)
          local targetPlayer = findPlayerByName(playerName)
          if targetPlayer then
            fling(targetPlayer)
          else
            fling()
          end
        else
          fling()
        end
        wait(2)

      elseif command:sub(1, 7) == "unfling" and table.find(bots, displayName) and cmdunfling then
        unfling()
        if index == channel then
          chatMessage("Stopped Flinging")
        end
        wait(2)

    elseif command:sub(1, 9) == "unorbit" and table.find(bots, displayName) and cmdunorbit then
        orbitbool = false
        orbitbool2 = false
        orbitbool3 = false
        orbitbool4 = false
        orbitbool5 = false
        orbitbool6 = false

        if index == channel then
        end
        game.Workspace.Gravity = 196.2
        wait(2)

    elseif command:sub(1, 5) == "goto " and table.find(bots, displayName) and cmdgoto then
      disablebool()
        local playerName = command:sub(6)
        local targetPlayer = findPlayerByName(playerName)
        if targetPlayer then
          goto(targetPlayer)
          wait(2)
        else
          chatMessage("Player not found: " .. playerName)
        end

    elseif command:sub(1, 6) == "tower " and table.find(bots, displayName) and cmdtower then
      disablebool()
        local playerName = command:sub(7)
        local targetPlayer = findPlayerByName(playerName)
        if targetPlayer then
          tower(targetPlayer)
          wait(2)
        else
          chatMessage("Player not found: " .. playerName)
        end

      elseif command:sub(1, 9) == "unfollow" and table.find(bots, displayName) and cmdunfollow then
        followbool = false
        if index == channel then
          chatMessage("stopped following")
        end
        wait(2)

    elseif command:sub(1, 6) == "unworm" and table.find(bots, displayName) and cmdunworm then
        wormbool = false
        if index == channel then
          chatMessage("stopped worm")
        end
        wait(2)

    elseif command:sub(1, 6) == "orbit " and table.find(bots, displayName) and cmdorbit then
      disablebool()
        orbitbool = false
        local args = command:split(" ")
        local playerName = args[2] 
        local r = tonumber(args[3])
        local speed = tonumber(args[4])

        local targetPlayer = findPlayerByName(playerName)
        if targetPlayer then
          orbitbool = true

          if index == channel then
            chatMessage("Bots are now orbiting " .. targetPlayer.Name)
          end
          orbitPlayer(targetPlayer, speed, r)

          wait(2)
        else
          if index == channel then
            chatMessage("Player not found: " .. playerName)
          end
        end

    elseif command:sub(1, 7) == "orbit2 " and table.find(bots, displayName) and cmdorbit2 then
      disablebool()
        orbitbool2 = false
        local args = command:split(" ")
        local playerName = args[2]
        local r = tonumber(args[3])
        local speed = tonumber(args[4])

        local targetPlayer = findPlayerByName(playerName)
        if targetPlayer then
          orbitbool2 = true 

          if index == channel then
            chatMessage("Bots are now orbiting " .. targetPlayer.Name)
          end
          orbitPlayer2(targetPlayer, speed, r)

          wait(2)
        else
          if index == channel then
            chatMessage("Player not found: " .. playerName)
          end
        end

    elseif command:sub(1, 7) == "orbit3 " and table.find(bots, displayName) and cmdorbit3 then
      disablebool()
        orbitbool3 = false
        local args = command:split(" ")
        local playerName = args[2]
        local r = tonumber(args[3])
        local speed = tonumber(args[4])

        local targetPlayer = findPlayerByName(playerName)
        if targetPlayer then
          orbitbool3 = true

          if index == channel then
            chatMessage("Bots are now orbiting " .. targetPlayer.Name)
          end
          orbitPlayer3(targetPlayer, speed, r)

          wait(2)
        else
          if index == channel then
            chatMessage("Player not found: " .. playerName)
          end
        end
    elseif command:sub(1, 7) == "orbit4 " and table.find(bots, displayName) and cmdorbit4 then
      disablebool()
        orbitbool4 = false
        local args = command:split(" ")
        local playerName = args[2]
        local r = tonumber(args[3])
        local speed = tonumber(args[4])

        local targetPlayer = findPlayerByName(playerName)
        if targetPlayer then
          orbitbool4 = true

          if index == channel then
            chatMessage("Bots are now orbiting " .. targetPlayer.Name)
          end
          orbitPlayer4(targetPlayer, speed, r)

          wait(2)
        else
          if index == channel then
            chatMessage("Player not found: " .. playerName)
          end
        end

    elseif command:sub(1, 7) == "orbit6 " and table.find(bots, displayName) and cmdorbit6 then
      disablebool()
        orbitbool6 = false
        local args = command:split(" ")
        local playerName = args[2]
        local r = tonumber(args[3])
        local speed = tonumber(args[4])

        local targetPlayer = findPlayerByName(playerName)
        if targetPlayer then
          orbitbool6 = true 

          if index == channel then
            chatMessage("Bots are now orbiting " .. targetPlayer.Name)
          end
          orbitPlayer6(targetPlayer, speed, r)

          wait(2)
        else
          if index == channel then
            chatMessage("Player not found: " .. playerName)
          end
        end

    elseif command:sub(1, 7) == "orbit5 " and table.find(bots, displayName) and cmdorbit5 then
      disablebool()
        orbitbool5 = false
        local args = command:split(" ")
        local playerName = args[2]
        local r = tonumber(args[3])
        local speed = tonumber(args[4])

        local targetPlayer = findPlayerByName(playerName)
        if targetPlayer then
          orbitbool5 = true

          if index == channel then
            chatMessage("Bots are now orbiting " .. targetPlayer.Name)
          end

          orbitPlayer5(targetPlayer, speed, r)

          wait(2)
        else
          if index == channel then
            chatMessage("Player not found: " .. playerName)
          end
        end

    elseif command:sub(1, 6) == "reset" and table.find(bots, displayName) and cmdreset then
      disablebool()
        player.Character:BreakJoints()
        game.Workspace.Gravity = 196.2
        wait(2)

    elseif command:sub(1, 5) == "worm " and table.find(bots, displayName) and cmdworm then
      disablebool()
        local playerName = command:sub(6) -- Obtenir le nom du joueur à suivre
        local targetPlayer = findPlayerByName(playerName)
        wormbool = false
        worm(targetPlayer)
        wait(2)

    elseif command:sub(1, 7) == "unstalk" and table.find(bots, displayName) and cmdunstalk then
        stalkbool = false
        if index == channel then
          chatMessage("Bots stopped stalking")
        end
        wait(2)

    elseif command:sub(1, 6) == "stalk " and table.find(bots, displayName) and cmdstalk then
      disablebool()
        stalkbool = false
        local playerName = command:sub(7)
        local targetPlayer = findPlayerByName(playerName)
        stalkbool = true
        if targetPlayer then
          if index == channel then
            chatMessage("Bots are now stalking " .. targetPlayer.Name .. ".")
          end
          stalkPlayer(targetPlayer)
          wait(2)
        else
          if index == channel then
            chatMessage("Player not found: " .. playerName)
          end
        end

    elseif command:sub(1, 7) == "follow " and table.find(bots, displayName) and cmdfollow then
      disablebool()
        followbool = false
        local playerName = command:sub(8)
        local targetPlayer = findPlayerByName(playerName)
        followbool = true
        if targetPlayer then
          if index == channel then
            chatMessage("Bots are now following " .. targetPlayer.Name .. ".")
          end
          followPlayer(targetPlayer)
          wait(2)
        else
          if index == channel then
            chatMessage("Player not found: " .. playerName)
          end
        end
      end
    end
  end
 end)
end

--listen to players
player.Chatted:Connect(function(message)

end)

--listen to owner
if ownerPlayer then
  connectChatListener(ownerPlayer)
end

--listen to admins
while adminbool do
  for _, adminName in pairs(adminNotConnected) do
    local adminPlayer = game.Players:FindFirstChild(adminName)
    if adminPlayer then
      connectChatListener(adminPlayer)
      table.remove(adminNotConnected, table.find(adminNotConnected, adminName))
    end
  end
  wait(2)
end

--listen to admins
game.Players.PlayerAdded:Connect(function(player)
if table.find(Admins, player.Name) then
  connectChatListener(player)
end
end)
